<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SubhadraSolutions.Utils.Astronomy</name>
    </assembly>
    <members>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Calculators.GeocentricPositionCalculator">
            <summary>
            Calcuates the geocentric (apparent) position of a planet relative to the mean equinox of the date.
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.GeocentricPositionCalculator.Calculate(System.DateTime,System.String)">
            <summary>
            Calculate geocentric position of the planet in its elliptical orbit
            </summary>
            <returns></returns>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Calculators.JupiterSatellitePositionCalculator">
            <summary>
            Calcuates the positions of the four Galilean moons of Jupiter on a given date
            per Jean Meeus, Astronomical Algorithms, Chapters 43 and 44. 
            See: https://squarewidget.com/astronomical-calculations-moons-of-jupiter/
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator">
            <summary>
            Calcuates the instance of the new moon phases within a given date range 
            following Jean Meeus, Astronomical Algorithms, Chapter 49.
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.GetMoonPhase(System.Double)">
            <summary>
            Returns the moon phase along with its date and time.
            </summary>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToK(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment)">
            <summary>
            Baseline value k where k = 0 is 6 Jan 2000 (first new moon of J2000.0 epoch).
            </summary>
            <param name="m">Moment</param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToT(System.Double)">
            <summary>
            Time T is the time in Julian centuries since the J2000.0 epoch
            </summary>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToJDE(System.Double,System.Double)">
            <summary>
            Time of mean conjuction or opposition
            </summary>
            <param name="k"></param>
            <param name="T"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToE(System.Double)">
            <summary>
            Earth's eccentricity in orbit
            </summary>
            <param name="T"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToM(System.Double,System.Double)">
            <summary>
            Sun's mean anomaly at time JDE
            </summary>
            <param name="k"></param>
            <param name="T"></param>
            <returns>M</returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToMPrime(System.Double,System.Double)">
            <summary>
            Moon's mean anomaly at time JDE
            </summary>
            <param name="k"></param>
            <param name="T"></param>
            <returns>M′</returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToF(System.Double,System.Double)">
            <summary>
            Moon's argument of latitude
            </summary>
            <param name="k"></param>
            <param name="T"></param>
            <returns>F</returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToO(System.Double,System.Double)">
            <summary>
            Longitude of the ascending node of the lunar orbit
            </summary>
            <param name="k"></param>
            <param name="T"></param>
            <returns>Ω</returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToA(System.Double,System.Double)">
            <summary>
            Planetary coefficients A1 thru A14 in degrees as 
            periodic terms for correction to JDE.
            </summary>
            <param name="k"></param>
            <param name="T"></param> 
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToNM(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Additional corrections to JDE in order to obtain 
            the true (apparent) phase of the new moon.
            </summary>
            <param name="E">Earth's eccentricity</param>
            <param name="Sm">Sun's mean anomaly (radians)</param>
            <param name="Mm">Moon's mean anomaly (radians)</param>
            <param name="F">Moon's argument of latitude (radians)</param>
            <param name="O">Longitude of the ascending node of the lunar orbit</param>
            <returns>Corrections for the new moon</returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToFM(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Additional corrections to JDE in order to obtain 
            the true (apparent) phase of the full moon.
            </summary>
            <param name="E">Earth's eccentricity</param>
            <param name="Sm">Sun's mean anomaly (radians)</param>
            <param name="Mm">Moon's mean anomaly (radians)</param>
            <param name="F">Moon's argument of latitude (radians)</param>
            <param name="O">Longitude of the ascending node of the lunar orbit</param>
            <returns>Corrections for the full moon</returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToFLQ(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Additional corrections to JDE in order to obtain 
            the true (apparent) phase of the first and last quarters.
            </summary>
            <param name="E">Earth's eccentricity</param>
            <param name="Sm">Sun's mean anomaly (radians)</param>
            <param name="Mm">Moon's mean anomaly (radians)</param>
            <param name="F">Moon's argument of latitude (radians)</param>
            <param name="O">Longitude of the ascending node of the lunar orbit</param>
            <returns>Corrections for the First and Last Quarters</returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToFLQCorrection(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Additional correction W only for First and Last Quarters.
            </summary>
            <param name="E"></param>
            <param name="Sm"></param>
            <param name="Mm"></param>
            <param name="F"></param>
            <returns>correction W</returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.ToDateTimeUTC(System.Double)">
            <summary>
            Given the corrected JDE for the new moon event adjust for Delta T and return UTC
            </summary>
            <param name="correctedJDE">Corrected JDE</param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.MoonPhaseDatesCalculator.GetPhaseName(System.Double)">
            <summary>
            Given a value of k in which the integral is in the range 0.0, 0.25, 0.50, or 0.75
            return the matching moon phase name. Negative values of k can result from dates 
            earlier than the J2000.0 epoch. 
            </summary>
            <param name="k"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Calculators.NutationCalculator">
            <summary>
            Calculate nutations in longitude (ΔΨ), obliquity (Δε), and the obliquity of the ecliptic (ε)
            for the moment in time. Algorithm ported from IAU SOFA ANSI C at https://iausofa.org/
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Calculators.NutationPeriodicTerms">
            <summary>
            Port of ANSI C from IAU SOFA. See copyright and license at bottom.
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Calculators.SaturnRingPositionAngleCalculator">
            <summary>
            Calcuates the geocentric (apparent) position angle P of Saturn's rings
            following Meeus algorithm.
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SaturnRingPositionAngleCalculator.Calculate(SubhadraSolutions.Utils.Astronomy.Models.GeocentricPosition,System.DateTime)">
            <summary>
            Calculate position angle of Saturn's rings given a current geocentric position
            </summary>
            <returns></returns>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator">
            <summary>
            Return all solar eclipses that occur within the date range. Returns a 
            list of SolarEclipse objects that can be compared to NASA's published 
            canon. See: https://eclipse.gsfc.nasa.gov/5MCSE/5MCSE-Maps-10.pdf
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.ToJDE(System.Int32,System.Double)">
            <summary>
            Time of mean conjuction or opposition (49.1)
            </summary>
            <param name="k"></param>
            <param name="T"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.ToE(System.Double)">
            <summary>
            Corrections for Earth's eccentricity in orbit (47.6)
            </summary>
            <param name="T"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.ToFPrime(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Degrees,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians)">
            <summary>
            Angle F prime to obtain time of maximum eclipse
            </summary>
            <param name="F"></param>
            <param name="Ω"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.ToAPrime(System.Double,System.Double)">
            <summary>
            Angle A prime to obtain time of maximum eclipse
            </summary>
            <param name="k"></param>
            <param name="T"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.ToG(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians)">
            <summary>
            Least distance from the axis of the Moon's shadow to the center of 
            the Earth in units of the equitorial radius of the Earth (6378 km)
            </summary>
            <param name="P"></param>
            <param name="Q"></param>
            <param name="Fp"></param>
            <param name="W"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.ToU(System.Double,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians)">
            <summary>
             radius of Moon's umbral cone in the fundamental plane
            </summary>
            <param name="E"></param>
            <param name="Sm"></param>
            <param name="Mm"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.ToGreatestMagnitude(System.Double,System.Double)">
            <summary>
            Meeus (54.2)
            For a partial eclipse the magnitude at its greatest point
            </summary>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.TimeOfGreatestEclipse(System.Double,System.Double,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians)">
            <summary>
            Returns the time of greatest eclipse in UTC
            </summary>
            <param name="jde"></param>
            <param name="E"></param>
            <param name="Mm"></param>
            <param name="Sm"></param>
            <param name="Fp"></param>
            <param name="Ap"></param>
            <param name="Ω"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.IsEclipse(System.Double,System.Double)">
            <summary>
            Returns true if the variables for g and u fall within 
            the range indicating an eclipse of some type occurs.
            A call to GetEclipseType will return the type.
            </summary>
            <param name="g"></param>
            <param name="u"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.Calculators.SolarEclipseCalculator.GetEclipseType(System.Double,System.Double)">
            <summary>
            Per Meeus: in the case of a central eclipse, the type of the eclipse can be determined by 
            the following rules: if u &lt; 0 then it's a total eclipse; if u > 0.0047 then it is annular; 
            if u is >= 0 and &lt;= 0.0047 then it is either annular or annular-total ("hybrid"). 
            </summary>
            <param name="g"></param>
            <param name="u"></param>
            <returns></returns>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Calculators.SundialCalculator">
            <summary>
            Calcuates the hour angles in a given range for a latitude (φ).
            See: https://squarewidget.com/lets-make-a-sundial
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Moons.Moon.FirstNewMoonOfJ2000Epoch">
            <summary>
            Baseline value k where k = 0 is 6 Jan 2000 (first new moon of J2000.0 epoch).
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Moons.Moon.MeanAnomaly">
            <summary>
            Moon's mean anomaly at time JDE
            </summary>
            <returns>M′</returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Moons.Moon.ArgumentOfLatitude">
            <summary>
            Moon's argument of latitude
            </summary>
            <returns>F</returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Moons.Moon.LongitudeOfAscendingNode">
            <summary>
            Longitude of the ascending node of the lunar orbit
            </summary>
            <returns>Ω</returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Stars.Sun.MeanLongitude">
            <summary>
            Geometric mean longitude of the Sun
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Stars.Sun.MeanAnomaly">
            <summary>
            Mean anomaly angle of the Sun 
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Stars.Sun.EquationOfCenter">
            <summary>
            Equation of Center of the Sun
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Stars.Sun.TrueLongitude">
            <summary>
            True geometric longitude of the Sun
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Stars.Sun.TrueAnomaly">
            <summary>
            True anomaly of the Sun
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Stars.Sun.RadiusVector">
            <summary>
            Radius vector of the sun per algorithm from U.S. Naval Observatory
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.CelestialObjects.Stars.Sun.GetGeocentricPosition">
            <summary>
            Return the geocentric position of the Sun referred to the mean equinox 
            of the date per Jean Meeus, Astronomical Algorithms, 2nd Ed, Chap 25.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.Earth.MeanAnomaly">
            <summary>
            Mean anomaly of the Earth
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.Earth.EquationOfCenter">
            <summary>
            Equation of Center
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.Earth.OrbitalEccentricity">
            <summary>
            Return the eccentricity (e) of the Earth's orbit following Jean Meeus, Astronomical 
            Algorithms (25.4). Eccentricity is a dimensionless parameter in the interval [0, 1)  
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.Earth.RadiusVector">
            <summary>
            Radius Vector of the Earth
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.Earth.MeanObliquity">
            <summary>
            Mean obliquity of the ecliptic (ε) per Meeus (22.2)
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.Jupiter.LongPeriodTerm">
            <summary>
            Long-period term in the motion of Jupiter
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.Jupiter.MeanAnomaly">
            <summary>
            Mean anomaly of Jupiter
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.Jupiter.EquationOfCenter">
            <summary>
            Equation of Center
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.Jupiter.RadiusVector">
            <summary>
            Radius Vector of Jupiter
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements">
            <summary>
            Orbital (Keplerian) elements of the planets referred to the ecliptic and the mean equinox of 
            the date using coefficients from Meeus 31.A. See: https://en.wikipedia.org/wiki/orbital_elements
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.P">
            <summary>
            Orbital period in tropical years
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.L">
            <summary>
            Mean longitude
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.a">
            <summary>
            Length of semimajor axis of the planet's orbit (AUs)
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.e">
            <summary>
            Orbital eccentricity is a dimensionless parameter in the interval [0, 1) 
            which is to say <![CDATA[0 <= e < 1]]> with 0 being a circle and 1 being a parabola.
            </summary>
            <returns>double in range [0, 1)</returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.ι">
            <summary>
            Inclination of the plane of the ecliptic
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.Ω">
            <summary>
            Longitude of the ascending node
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.π">
            <summary>
            Longitude of the perihelion
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.M">
            <summary>
            Mean anomaly of the planet (M)
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.ω">
            <summary>
            Argument of the Perihilion (ω)
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.E">
            <summary>
            Given e and M solve Kepler's Equation iteratively to get eccentric anomaly E
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.MeanOrbitalElements.OrbitalElements.v">
            <summary>
            True anomaly (ν) expressed as a series in terms of e and E via W.M. Smart, Textbook on 
            Spherical Astronomy, pp. 118-119 (formula 85). The wiki demonstrates a Fourier expansion at 
            https://en.wikipedia.org/wiki/True_anomaly which is also in Smart, p. 120 (Formula 87).
            </summary>
            <returns></returns>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Planets.SphericalLBRCoordinates.ConcreteBuilders.JupiterSphericalCoordinatesBuilder">
            <summary>
            VSOP87D Spherical LBR-Coordinates
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Planets.SphericalLBRCoordinates.ConcreteBuilders.MarsSphericalCoordinatesBuilder">
            <summary>
            VSOP87D Spherical LBR-Coordinates
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Planets.SphericalLBRCoordinates.ConcreteBuilders.MercurySphericalCoordinatesBuilder">
            <summary>
            VSOP87D Spherical LBR-Coordinates
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Planets.SphericalLBRCoordinates.ConcreteBuilders.SaturnSphericalCoordinatesBuilder">
            <summary>
            VSOP87D Spherical LBR-Coordinates
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Planets.SphericalLBRCoordinates.ConcreteBuilders.VenusSphericalCoordinatesBuilder">
            <summary>
            VSOP87D Spherical LBR-Coordinates
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.SphericalLBRCoordinates.SphericalCoordinates.L">
            <summary>
            Ecliptical longitude
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.SphericalLBRCoordinates.SphericalCoordinates.B">
            <summary>
            Ecliptical latitude
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Planets.SphericalLBRCoordinates.SphericalCoordinates.R">
            <summary>
            Radius Vector (distance to Sun)
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.GeocentricPosition.EclipticalCoordinates">
            <summary>
            Geocentric ecliptical coordinates λ and β
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.GeocentricPosition.EquitorialCoordinates">
            <summary>
            Geocentric equitorial coordinates α and δ
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.GeocentricPosition.Δt">
            <summary>
            True distance from Earth in AU
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.GeocentricPosition.Δa">
            <summary>
            Apparent distance from Earth in AU after adjusting for planetary aberration
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.Nutation.ΔΨ">
            <summary>
            Nutation in Longitude
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.Nutation.Δε">
            <summary>
            Nutation in Obliquity
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.Nutation.ε">
            <summary>
            Obliquity of the Ecliptic
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Models.SolarEclipse">
            <summary>
            A Solar eclipse occurrence at a particular moment in time
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.SolarEclipse.Date">
            <summary>
            Eclipse Date
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.SolarEclipse.Time">
            <summary>
            UTC Time of Greatest Eclipse when the axis of the moon's 
            shadow cone passes closest to Earth's center.
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.SolarEclipse.EclipseType">
            <summary>
            Eclipse type can be Partial, Total, Annular, or Hybrid
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.SolarEclipse.Magnitude">
            <summary>
            Magnitude of the Eclipse
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.Models.SolarEclipse.Gamma">
            <summary>
            Least distance from the ais of the Moon's shadow to the 
            center of the Earth in units of the Earth's equatorial radius.
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.Models.SundialAngle">
            <summary>
            Sundial hour angle for a given latitude and hour.
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.AstronomicalUnits">
            <summary>
            Struct to hold astronomical units (AU)
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Degrees">
            <summary>
            Struct to hold decimal degrees (+/-58°.4168)
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Degrees.ToString">
            <summary>
            Given a decimal degree like 58.4168 return as 58°.4168
            </summary>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Degrees.FormatDegree(System.Double)">
            <summary>
            Given a decimal degree like 58.4168 return as 58°.4168
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.DeltaT.GetValue(System.Int32)">
            <summary>
            Polynomial expressions from NASA to approximate value in future years at 
            https://eclipse.gsfc.nasa.gov/SEhelp/deltatpoly2004.html
            </summary>
        </member>
        <member name="F:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.DeltaT.Values">
            <summary>
            Returns DeltaT estimate. Years 1620 through 2009 are taken from the observed values 
            at https://webspace.science.uu.nl/~gent0113/deltat/deltat_modern.htm
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.EclipticalCoordinates">
            <summary>
            Struct to hold ecliptic longitude and latitude. Latitude λ should be corrected  
            to required degree range [0, 360] and longitude β should be +/- 90.
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.EquatorialCoordinates">
            <summary>
            Struct to hold equitorial right ascension (α), declination (δ), and 
            the Earth's obliquity of the ecliptic (ε).
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.HorizontalCoordinates">
            <summary>
            Struct to hold horizontal coordinates (Alt-Az) and to 
            convert between horizontal and equitorial coordinates.
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.HorizontalCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Construct with known altitude h and azimuth A in decimal degrees
            </summary>
            <param name="h">Altitude h in decimal degrees</param>
            <param name="A">Azimuth A in decimal degrees</param>
            <param name="ε">Mean obliquity of the ecliptic (ε) in decimal degrees</param>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.HorizontalCoordinates.#ctor(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Degrees,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Degrees,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Degrees)">
            <summary>
            Construct with known altitude h and azimuth A in degrees
            </summary>
            <param name="h">Altitude h in degrees</param>
            <param name="A">Azimuth A in degrees</param>
            <param name="ε">Mean obliquity of the ecliptic (ε) in degrees</param>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.HorizontalCoordinates.#ctor(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.EquatorialCoordinates)">
            <summary>
            Construct given the observer's latitude (φ), longitude (L), 
            and the object's apparent equitorial coordinates following
            Jean Meeus (13.5) and (13.6). See also J. L. Lawrence (4.7.3)
            and (4.7.4).
            </summary>
            <param name="moment">Moment in time</param>
            <param name="φ">Observer's Latitude</param>
            <param name="L">Observer's Longitude</param>
            <param name="eqc">EquitorialCoordinates</param>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.HorizontalCoordinates.ToΕquatorialCoordinates(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle)">
            <summary>
            Convert the horizontal coordinates to equatorial coordinates. I consulted 
            a Go library by Sonia Keys at https://github.com/soniakeys/meeus for the
            final adjustment of the hour angle.
            </summary>
            <param name="moment"></param>
            <param name="φ">Observer's Latitude</param>
            <param name="L">Observer's Longitude</param>
            <returns>EquatorialCoordinates</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.LightTime.#ctor(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.AstronomicalUnits)">
            <summary>
            Given an existing distance d in AU return the time it takes for 
            light to reach the Earth from the body at the distance Δ.
            </summary>
            <param name="distance"></param>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.LightTime.Equals(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.LightTime)">
            <summary>
            Two light times are considered equal if their TotalDays value
            is within a tolerance of 0.0000001.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment">
            <summary>
            A moment is a specific point in time down to the optional millisecond.
            Calculators assume that the passed in date is universal time.
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a Moment with known values down to the millisecond.
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Creates a Moment with known values using a fraction to represent the day 
            of the month as well as the hour, minute, second, and millisecond component.
            For example, 4.812 is the 4th day at 19:29 (7:29 PM).
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.#ctor(System.Double)">
            <summary>
            Creates a Moment with a known Julian Day (JD) value.
            </summary>
            <param name="julianDay"></param>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.ToDecimalYear">
            <summary>
            Converts calendar date to decimal date. For example, the total solar 
            eclipse of 21 May 1993 (141st day of year) would be decimal 1993.38.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.JDE">
            <summary>
            A Julian Day (JD) is a continuous count of days and fractions thereof
            starting at 1 Jan -4712 at noon UTC to a given point in time thereafter.
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.MDJ">
            <summary>
            Modified Julian Day which begins at Greenwich mean midnight
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.T">
            <summary>
            Time T is measured in Julian centuries of 36525 ephemeris days from the epoch J2000.0.
            Note: the VSOP planetary theory uses Julian millennia (365250) instead of centuries.
            </summary>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.DayD">
            <summary>
            Day D is the number of days (and decimals thereof) from the epoch J2000.0
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.IsJulianDate">
            <summary>
            Pope Gregory introduced the Gregorian calendar in October 1582 when the 
            calendar had drifted 10 days. Dates prior to 4 Oct 1582 are Julian dates
            and dates after 15 Oct 1582 are Gregorian dates. Any date in the gap is
            invalid on the Gregorian calendar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment.ToRoundedSeconds(System.TimeSpan)">
            <summary>
            Given a TimeSpan with a Second value like 23 and a Millisecond value like 999
            return rounded value where 23.999 == 24 or 23.499 == 23.
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians">
            <summary>
            Struct to hold radians (e.g., +/-1.019565498)
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Radians.#ctor(System.Double)">
            <summary>
            Initialize with a value in radians
            </summary>
            <param name="value">value in radians not decimal degrees</param>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.RightAscension">
            <summary>
            Struct for right ascension (α) in hours, minutes, and seconds (HMS)
            </summary>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle">
            <summary>
            Struct for a sexigesimal angle in degrees, arcminutes, and arcseconds (DMS)
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle.#ctor(System.Double)">
            <summary>
            Constructor for decimal degree (e.g., +58.255) build angle
            </summary>
            <param name="dd"></param>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Constructor for degrees, minutes, seconds (DMS)
            </summary>
            <param name="degrees"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle.SignOf(System.Double,System.Double,System.Double)">
            <summary>
            Determine whether DMS is negative or positive by evaluating the first non-zero term.
            </summary>
            <param name="degrees"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
            <returns></returns>
        </member>
        <member name="T:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SiderealTime">
            <summary>
            Struct to calculate and hold sidereal time
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SiderealTime.#ctor(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.Moment)">
            <summary>
            Constructor for the sidereal time
            </summary>
            <param name="moment">Moment in time</param>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SiderealTime.GreenwichMean">
            <summary>
            Return the Greenwich Mean Sidereal Time (GMST).
            </summary>
            <returns>GMST</returns>
        </member>
        <member name="P:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SiderealTime.GreenwichApparent">
            <summary>
            Return the Greenwich Apparent Sidereal Time (GAST)
            </summary>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SiderealTime.ToLocalMean(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle)">
            <summary>
            Given the observer's longitude (L), return the observer's Local Mean Sidereal Time (LMST).
            </summary>
            <param name="L">observer's longitude</param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SiderealTime.ToLocalApparent(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle)">
            <summary>
            Given the observer's longitude (L), return the observer's Local Apparent Sidereal Time (LAST)
            </summary>
            <param name="L"></param>
            <returns></returns>
        </member>
        <member name="M:SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SiderealTime.ToHourAngle(SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.SexigesimalAngle,SubhadraSolutions.Utils.Astronomy.UnitsOfMeasure.RightAscension)">
            <summary>
            Given the observer's longitude (L) and the object's apparent equatorial coordinate for 
            right ascension (α), return the local mean hour angle (H) of the observer's position.
            H = GMST - L - α or H = LST - α
            </summary>
            <param name="L"></param>
            <param name="α"></param>
            <returns></returns>
        </member>
    </members>
</doc>
